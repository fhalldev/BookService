/*
Deployment script for book_task

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "book_task"
:setvar DefaultFilePrefix "book_task"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL16.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL16.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column book_description on table [dbo].[book] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The type for column book_description in table [dbo].[book] is currently  NCHAR (10) NULL but is being changed to  VARCHAR (MAX) NOT NULL. Data loss could occur and deployment may fail if the column contains data that is incompatible with type  VARCHAR (MAX) NOT NULL.
*/

IF EXISTS (select top 1 1 from [dbo].[book])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping Default Constraint unnamed constraint on [dbo].[book]...';


GO
ALTER TABLE [dbo].[book] DROP CONSTRAINT [DF__book__book_name__37A5467C];


GO
PRINT N'Dropping Default Constraint unnamed constraint on [dbo].[book]...';


GO
ALTER TABLE [dbo].[book] DROP CONSTRAINT [DF__book__book_autho__38996AB5];


GO
PRINT N'Dropping Default Constraint unnamed constraint on [dbo].[book]...';


GO
ALTER TABLE [dbo].[book] DROP CONSTRAINT [DF__book__book_categ__398D8EEE];


GO
PRINT N'Starting rebuilding table [dbo].[book]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_book] (
    [book_id]                     INT           IDENTITY (1, 1) NOT NULL,
    [book_name]                   VARCHAR (MAX) DEFAULT ('') NOT NULL,
    [book_author]                 VARCHAR (MAX) DEFAULT ('') NOT NULL,
    [book_category]               INT           DEFAULT ((0)) NOT NULL,
    [book_registration_timestamp] DATETIME      NOT NULL,
    [book_description]            VARCHAR (MAX) DEFAULT ('') NOT NULL,
    PRIMARY KEY CLUSTERED ([book_id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[book])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_book] ON;
        INSERT INTO [dbo].[tmp_ms_xx_book] ([book_id], [book_name], [book_author], [book_category], [book_registration_timestamp], [book_description])
        SELECT   [book_id],
                 [book_name],
                 [book_author],
                 [book_category],
                 [book_registration_timestamp],
                 [book_description]
        FROM     [dbo].[book]
        ORDER BY [book_id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_book] OFF;
    END

DROP TABLE [dbo].[book];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_book]', N'book';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Altering Procedure [dbo].[pr_book_update]...';


GO
ALTER PROCEDURE dbo.[pr_book_update]
    @BookID int = 0,
    @BookName varchar(MAX) = '',
    @BookAuthor varchar(MAX) = '',
    @BookCategory int = 0,
    @BookDescription varchar(MAX) = '',
    @RegistrationTimestamp datetime = GETDATE
AS
    IF @BookID = 0
    BEGIN
        -- Insert a new book
        INSERT INTO book (book_name, book_author, book_category, book_description, book_registration_timestamp)
        VALUES (@BookName, @BookAuthor, @BookCategory, @BookDescription, GETDATE());
    END

    ELSE
    BEGIN
        -- Update an existing book
        UPDATE book
        SET book_name = book_name,
            book_author = book_author,
            book_category = @BookCategory,
            book_description = @BookDescription
        WHERE book_id = @BookID;
    END
GO
PRINT N'Update complete.';


GO
